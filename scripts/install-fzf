#!/usr/bin/env bash

version=0.15.3

# cd $(dirname $BASH_SOURCE)
fzf_base=$(pwd)

ask() {
  read -p "$1 ([y]/n) " -n 1 -r
  echo
  [[ ! $REPLY =~ ^[Nn]$ ]]
}

check_binary() {
  echo -n "  - Checking fzf executable ... "
  local output=$("$fzf_base"/bin/fzf --version 2>&1)
  if [ "$version" = "$output" ]; then
    echo "$output"
    binary_error=""
  else
    echo "$output != $version"
    rm -f "$fzf_base"/bin/fzf
    binary_error="Invalid binary"
    return 1
  fi
}

symlink() {
  echo "  - Creating symlink: bin/$1 -> bin/fzf"
  (cd "$fzf_base"/bin &&
   rm -f fzf &&
   ln -sf $1 fzf)
  if [ $? -ne 0 ]; then
    binary_error="Failed to create symlink"
    return 1
  fi
}

download() {
  echo "Downloading bin/fzf ..."
  if [[ ! $1 =~ dev && -x "$fzf_base"/bin/fzf ]]; then
    echo "  - Already exists"
    check_binary && return
  elif [ -x "$fzf_base"/bin/$1 ]; then
    symlink $1 && check_binary && return
  fi
  mkdir -p "$fzf_base"/bin && cd "$fzf_base"/bin
  if [ $? -ne 0 ]; then
    binary_error="Failed to create bin directory"
    return
  fi

  local url=https://github.com/junegunn/fzf-bin/releases/download/$version/${1}.tgz
  echo $url
  if which curl > /dev/null; then
    curl -fL $url | tar -xz
  elif which wget > /dev/null; then
    wget -O - $url | tar -xz
  else
    binary_error="curl or wget not found"
    return
  fi

  if [ ! -f $1 ]; then
    binary_error="Failed to download ${1}"
    return
  fi

  chmod +x $1 && symlink $1 && check_binary
}

# Try to download binary executable
archi=$(uname -sm)
binary_available=1
binary_error=""
case "$archi" in
  Darwin\ x86_64) download fzf-$version-darwin_amd64 ;;
  Darwin\ i*86)   download fzf-$version-darwin_386   ;;
  Linux\ x86_64)  download fzf-$version-linux_amd64  ;;
  Linux\ i*86)    download fzf-$version-linux_386    ;;
  *)              binary_available=0                 ;;
esac
